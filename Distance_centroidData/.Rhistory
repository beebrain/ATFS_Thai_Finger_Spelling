geom_point(aes(color=variable))+ylim(0,70)
rm(list=ls())
library(data.table)
library(xlsx)
library(ggplot2)
library(cowplot)
require(stringi)
require(stringr)
################# config parameter ################
timemaker_out = "./timerMarker/"
MAsmoote = 5  # moving average ratio
threshold_cutoff = 10  ## cut off threshold
frame_ignore = 3    ## ignore frame if there are not activate in frame 3
## moving aveage funciton
ma <- function(x, n = 5){filter(x, rep(1 / n, n), sides = 2)}
markSign = function(dataset, columnName,threshold){
numberData = nrow(dataset)
dataset[which(dataset[,columnName] < threshold & dataset[,columnName] > 0),"check"]  = threshold
dataset[which(dataset[,columnName] <= 0 | is.na(dataset[,columnName])),"check"] = -1
dataset[which(dataset[,columnName] > threshold),"check"]  = 0
return (dataset$check)
}
givemeaRange = function(dataset,threshold_cutoff,frame_jump = 3){
a =  which(dataset == threshold_cutoff)
timeframe_cut = data.frame()
first = a[1]
finish = a[1]
for (i in a){
if ((i - finish ) <=frame_jump){
finish = i
}else{
if(finish != 0){
timeframe_cut = rbind(timeframe_cut,data.frame("start"=first,"stop"=finish))
first = i
finish = i
}
}
}
timeframe_cut = rbind(timeframe_cut,c(first,finish))
names(timeframe_cut) = c("start","stop")
return (timeframe_cut)
}
annotation_file = "../2Com_top200_detail.csv"
dataset_anno= read.csv(annotation_file,header = T,sep = ",",stringsAsFactors=FALSE)
total_file = nrow(dataset_anno)
fileName = dataset_anno[i,]["File.Name"]
fileResult_analy = paste("../Centroid/",fileName,".txt",sep="")
fileResult_analy = "../Centroid/2019-12-28 14-13-02_Sub_63.txt" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
distance1 = rbind(data.frame(X=0,Y=0),dataset)
distance2 = rbind(dataset,data.frame(X=0,Y=0))
distance = sqrt(((distance2$X - distance1$X)^2) +((distance2$Y - distance1$Y)^2 ))
distanceX = sqrt(((distance2$X - distance1$X)^2))
distanceY = sqrt(((distance2$Y - distance1$Y)^2))
threshold_cutoff = 6.3  ## cut off threshold
frame_ignore = 3    ## ignore frame if there are not activate in frame 3
## moving aveage funciton
ma <- function(x, n = 5){filter(x, rep(1 / n, n), sides = 2)}
markSign = function(dataset, columnName,threshold){
numberData = nrow(dataset)
dataset[which(dataset[,columnName] < threshold & dataset[,columnName] > 0),"check"]  = threshold
dataset[which(dataset[,columnName] <= 0 | is.na(dataset[,columnName])),"check"] = -1
dataset[which(dataset[,columnName] > threshold),"check"]  = 0
return (dataset$check)
}
givemeaRange = function(dataset,threshold_cutoff,frame_jump = 3){
a =  which(dataset == threshold_cutoff)
timeframe_cut = data.frame()
first = a[1]
finish = a[1]
for (i in a){
if ((i - finish ) <=frame_jump){
finish = i
}else{
if(finish != 0){
timeframe_cut = rbind(timeframe_cut,data.frame("start"=first,"stop"=finish))
first = i
finish = i
}
}
}
timeframe_cut = rbind(timeframe_cut,c(first,finish))
names(timeframe_cut) = c("start","stop")
return (timeframe_cut)
}
annotation_file = "../2Com_top200_detail.csv"
dataset_anno= read.csv(annotation_file,header = T,sep = ",",stringsAsFactors=FALSE)
total_file = nrow(dataset_anno)
fileName = dataset_anno[i,]["File.Name"]
fileResult_analy = paste("../Centroid/",fileName,".txt",sep="")
fileResult_analy = "../Centroid/2019-12-28 14-13-02_Sub_63.txt" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
distance1 = rbind(data.frame(X=0,Y=0),dataset)
distance2 = rbind(dataset,data.frame(X=0,Y=0))
distance = sqrt(((distance2$X - distance1$X)^2) +((distance2$Y - distance1$Y)^2 ))
distanceX = sqrt(((distance2$X - distance1$X)^2))
distanceY = sqrt(((distance2$Y - distance1$Y)^2))
dataset$distance = distance[1:length(distance)-1]
dataset$movDis = ma(dataset$distance,MAsmoote) ## make smooted with 3 values
dataset$check_1 = markSign(dataset,"movDis",threshold_cutoff)
### get time marker ###
timemarker = givemeaRange(dataset$check_1,threshold_cutoff,frame_ignore)
write.csv(timemarker,paste(timemaker_out,"timemaker_",fileName,".txt",sep=""))
dataset$frameindex = seq(1:(length(distance)-1))
setDT(dataset)
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable))+ylim(0,70)
setwd("E:/Neural_PlayGround/Merge_AllPhase/Evaluate")
rm(list=ls())
library(data.table)
library(xlsx)
library(ggplot2)
library(cowplot)
require(stringi)
require(stringr)
timemaker_out = "./timerMarker/"
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(length(distance)-1))
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)-1))
setDT(dataset)
dataset$frameindex = seq(1:(nrow(dataset)))
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
setDT(dataset)
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
dataset_wide
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable))+ylim(0,70)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable))+ylim(0,5)
dataset[1:5,L0_H0_wfs]
dataset[1:5,]
dataset[1:7,]
fileName = dataset_anno[i,]["File.Name"]
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
dataset = WFSFu(dataset)
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
for (i in seq(1,numberData)){
if (dataset[i,L0_H0_wfs]  == dataset[i+windowframe,L0_H0_wfs]){
dataset[i:i+windowframe,L0_H0_wfs] = dataset[i,L0_H0_wfs]
}
}
return (dataset)
}
dataset = WFSFu(dataset)
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
for (i in seq(1,numberData-windowframe)){
if (dataset[i,L0_H0_wfs]  == dataset[i+windowframe,L0_H0_wfs]){
dataset[i:i+windowframe,L0_H0_wfs] = dataset[i,L0_H0_wfs]
}
}
return (dataset)
}
fileName = dataset_anno[i,]["File.Name"]
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
dataset = WFSFu(dataset)
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
for (i in seq(1,numberData-windowframe-1)){
if (dataset[i,L0_H0_wfs]  == dataset[i+windowframe,L0_H0_wfs]){
dataset[i:i+windowframe,L0_H0_wfs] = dataset[i,L0_H0_wfs]
}
}
return (dataset)
}
fileName = dataset_anno[i,]["File.Name"]
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
dataset = WFSFu(dataset)
fileName = dataset_anno[i,]["File.Name"]
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
dataset
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
dataset
dataset[i:i+windowframe,L0_H0_wfs]
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
dataset[1:6,L0_H0_wfs] = dataset[1,L0_H0_wfs]
dataset[1:6,L0_H0_wfs] = 1
dataset[1,L0_H0_wfs] = 1
dataset[1,L0_H0_wfs]
dataset[1,L0_H0_wfs]
dataset[1,"L0_H0_wfs"]
dataset[1:6,"L0_H0_wfs"]
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
for (i in seq(1,numberData-windowframe-1)){
if (dataset[i,"L0_H0"]  == dataset[i+windowframe,"L0_H0"]){
dataset[i:i+windowframe,"L0_H0_wfs"] = dataset[i,"L0_H0"]
}
}
return (dataset)
}
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
dataset
which(dataset$L0_H0 >0)
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
dataset[which(dataset$L0_H0 >0),"L0_H0_wfs"] =1
for (i in seq(1,numberData-windowframe-1)){
if (dataset[i,"L0_H0_wfs"]  == dataset[i+windowframe,"L0_H0_wfs"]){
dataset[i:i+windowframe,"L0_H0_wfs"] = dataset[i,"L0_H0_wfs"]
}
}
return (dataset)
}
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
View(dataset)
View(dataset)
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
debugSource('E:/Neural_PlayGround/Merge_AllPhase/Evaluate/ShowGrapheachFrame_WFS.R', echo=TRUE)
View(dataset)
View(dataset)
dataset[i+windowframe,"L0_H0_wfs"]
i+windowframe
dataset[i:i+windowframe,"L0_H0_wfs"] = dataset[i,"L0_H0_wfs"]
dataset[i:i+windowframe,"L0_H0_wfs"]
dataset[7,"L0_H0_wfs"]
dataset[79,"L0_H0_wfs"]
View(dataset)
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
dataset[which(dataset$L0_H0 >0),"L0_H0_wfs"] =1
for (i in seq(73,numberData-windowframe-1)){
if (dataset[i,"L0_H0_wfs"]  == dataset[i+windowframe,"L0_H0_wfs"]){
print(i)
print(dataset[i,"L0_H0_wfs"])
print(dataset[i:i+windowframe,"L0_H0_wfs"])
dataset[i:i+windowframe,"L0_H0_wfs"] = dataset[i,"L0_H0"]
print(dataset[i:i+windowframe,"L0_H0_wfs"])
}
}
return (dataset)
}
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
dataset[which(dataset$L0_H0 >0),"L0_H0_wfs"] =1
for (i in seq(73,numberData-windowframe-1)){
if (dataset[i,"L0_H0_wfs"]  == dataset[i+windowframe,"L0_H0_wfs"]){
print(i)
print(dataset[i,"L0_H0_wfs"])
print(dataset[i:i+windowframe,"L0_H0_wfs"])
dataset[i:i+windowframe,"L0_H0_wfs"] = dataset[i,"L0_H0_wfs"]
print(dataset[i:i+windowframe,"L0_H0_wfs"])
}
}
return (dataset)
}
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
dataset
WFSFu = function(dataset){
windowframe = 5
numberData = nrow(dataset)
dataset[which(dataset$L0_H0 >0),"L0_H0_wfs"] =1
for (i in seq(73,numberData-windowframe-1)){
if (dataset[i,"L0_H0_wfs"]  == dataset[i+windowframe,"L0_H0_wfs"]){
print(i)
print(dataset[i,"L0_H0_wfs"])
print(dataset[i:(i+windowframe),"L0_H0_wfs"])
dataset[i:(i+windowframe),"L0_H0_wfs"] = dataset[i,"L0_H0_wfs"]
print(dataset[i:(i+windowframe),"L0_H0_wfs"])
}
}
return (dataset)
}
fileResult_analy = "./Test_DistanceV2MAV/2019-12-28 14-13-02_Sub_63_L0.csv" ## fix code path in Local file
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
View(dataset)
setDT(dataset)
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable))+ylim(0,5)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable))+
geom_point(aes(shape=variable))+ylim(0,5)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
#geom_line(aes(linetype=variable))+
geom_point(aes(shape=variable))+ylim(0,5)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
setDT(dataset)
dataset$L0_H0 = dataset$L0_H0+0.25
dataset$L0_H0_wfs = dataset$L0_H0_wfs-0.25
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
dataset[which(dataset$L0_H0>0),"L0_H0"] += 0.1
dataset[which(dataset$L0_H0>0),"L0_H0"]
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
setDT(dataset)
dataset[which(dataset$L0_H0>0),"L0_H0"] = dataset[which(dataset$L0_H0>0),"L0_H0"]+0.1
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"]-0.1
dataset[which(dataset$L0_H0>0),"L0_H0"]
dataset[which(dataset$L0_H0>0),"L0_H0"] = dataset[which(dataset$L0_H0>0),"L0_H0"]+0.1
dataset[which(dataset$L0_H0>0),"L0_H0"] = dataset[which(dataset$L0_H0>0),"L0_H0"]+5
dataset[which(dataset$L0_H0>0),"L0_H0"] = dataset[which(dataset$L0_H0>0),"L0_H0"]+0.1
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"]-0.1
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset = WFSFu(dataset)
setDT(dataset)
dataset[which(dataset$L0_H0>0),"L0_H0"] = dataset[which(dataset$L0_H0>0),"L0_H0"]+0.1
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"]-0.1
dataset
dataset$L0_H0 = num(dataset$L0_H0)
dataset$L0_H0 = as.numeric(dataset$L0_H0)
dataset = WFSFu(dataset)
setDT(dataset)
dataset[which(dataset$L0_H0>0),"L0_H0"] = dataset[which(dataset$L0_H0>0),"L0_H0"]+0.1
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"]-0.1
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,50)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset$L0_H0 = as.numeric(dataset$L0_H0)
dataset = WFSFu(dataset)
setDT(dataset)
dataset[which(dataset$L0_H0>0),"L0_H0"] = 1+0.1
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = 1-0.1
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
dataset= read.csv(fileResult_analy)
dataset$frameindex = seq(1:(nrow(dataset)))
L0_H0_wfs = dataset$L0_H0
dataset$L0_H0_wfs = L0_H0_wfs
dataset$L0_H0 = as.numeric(dataset$L0_H0)
dataset = WFSFu(dataset)
setDT(dataset)
dataset[which(dataset$L0_H0>0),"L0_H0"] = 1+0.1
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = 1-0.1
dataset[which(dataset$annotation>0),"annotation"] = 1
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+ylim(0,5)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 0, y = 1:2, label = 1:2)
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 0, y = 0:1, label = c("non-sign,sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 0, y = 0:1, label = ("non-sign,sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 0, y = 0:1, label = "non-sign,sign")
label = 1:7
label
label = c("1","2")
label
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 0, y = 0:1, label = c("1","2"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 0, y = 0:1, label = c("sign","nonsign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("sign","nonsign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
dataset[which(dataset$L0_H0>0),"L0_H0"] = 1+0.05
dataset[which(dataset$L0_H0_wfs>0),"L0_H0_wfs"] = 1-0.05
dataset[which(dataset$annotation>0),"annotation"] = 1
dataset_wide = melt(dataset, id.vars=c("X", "Y","frameindex"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_line(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_segment(aes(linetype=variable, color=variable))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_segment(aes(x=frameindex,xend = frameindex))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_segment(aes(x=frameindex,xend = frameindex,y=value,yend=value))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
geom_segment(aes(x=frameindex,xend = frameindex,y=0,yend=value))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
#geom_segment(aes(x=frameindex,xend = frameindex,y=value,yend=value))+
geom_point(aes(color=variable,shape=variable))+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
#geom_segment(aes(x=frameindex,xend = frameindex,y=value,yend=value))+
geom_point(aes(color=variable,shape=variable))+
geom_line()
ggplot(data=dataset_wide, aes(x=frameindex,y=value,group=variable)) +
#geom_segment(aes(x=frameindex,xend = frameindex,y=value,yend=value))+
geom_point(aes(color=variable,shape=variable))+
geom_line()+
scale_y_discrete()+
annotate("text", x = 5, y = 0:1, label = c("nonsign","sign"))
